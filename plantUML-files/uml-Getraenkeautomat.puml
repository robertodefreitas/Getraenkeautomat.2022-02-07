@startuml
'https://plantuml.com/class-diagram
!include uml-style.iuml
'need this into unix systems
!pragma layout smetana
'- private
'# protected
'~ package private
'+ public

'ROOT/MAIN

+class Getraenkeautomat <root> {
  -List<Getraenkewunsch> getraenkewuensche
  -Kasse kasse
  +Getraenkewunsch getraenkSuchen(String auswahl)
  +Integer summeAllerGetraenkewunsch()
  +Integer summeAllerGetraenke()
  +GetraenkUndWechselgeld kaufen(Getraenkewunsch auswahl, Muenzen einzahlung)
}

+class GetraenkUndWechselgeld <root> {
  -String getraenk
  -double wechselgeld
}

'KASSE

+class Muenzen <kasse> {
  -int c10Menge
  -int c20Menge
  -int c50Menge
  -int c100Menge
  -int c200Menge
  +setMuenze(int muenze, int anzahl)
  +int umwandelGeldBetrag2Cents(double geldBetrag)
  +Muenzen umwandelnGeldBetrag2Muenzen(double geldBetrag)
  +double umwandelnCents2GeldBetrag(int geldBetragCents)
  +double umwandelnMuenzen2GeldBetrag()
}

+class Kasse <kasse> {
  -Muenzen vorhandeneMuenzen
  +void muenzenHinzufuegen(Muenzen muenzen)
  +void muenzuenAbziehen(Muenzen muenzen)
  +double summeKasseBetrag()

}

'LAGER

+class Getraenkewunsch <lager> {
  -int getraenkeId
  -String getraenkeName
  -int getraenkeMenge
  -double getraenkePreis
  +boolen istGetraenkeVorhanden()
  +void getraenkeKonsumieren()
  +boolen einzahlungAusreichend(double einzahlung)
}


'RELATIONSHIP
'https://info-wsf.de/assoziation-aggregation-und-komposition/
'https://www.geeksforgeeks.org/association-composition-aggregation-java/
Getraenkeautomat --> "1" Muenzen
Getraenkeautomat --> "1" Kasse
Getraenkeautomat --> "n" Getraenkewunsch
Getraenkeautomat --> "1" GetraenkUndWechselgeld
Kasse --> "3" Muenzen

@enduml